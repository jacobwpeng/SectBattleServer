// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sect_battle_protocol.proto

#ifndef PROTOBUF_sect_5fbattle_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_sect_5fbattle_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SectBattle {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

class ProtocolMessage;
class PBPos;
class PBField;
class BattleField;
class QueryBattleFieldRequest;
class QueryBattleFieldResponse;
class JoinBattleRequest;
class JoinBattleResponse;
class MoveRequest;
class MoveResponse;
class ChangeSectRequest;
class ChangeSectResponse;
class CheckFightRequest;
class CheckFightResponse;
class ResetPositionRequest;

// ===================================================================

class ProtocolMessage : public ::google::protobuf::Message {
 public:
  ProtocolMessage();
  virtual ~ProtocolMessage();

  ProtocolMessage(const ProtocolMessage& from);

  inline ProtocolMessage& operator=(const ProtocolMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolMessage& default_instance();

  void Swap(ProtocolMessage* other);

  // implements Message ----------------------------------------------

  ProtocolMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtocolMessage& from);
  void MergeFrom(const ProtocolMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bytes payload = 2;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline const ::std::string& payload() const;
  inline void set_payload(const ::std::string& value);
  inline void set_payload(const char* value);
  inline void set_payload(const void* value, size_t size);
  inline ::std::string* mutable_payload();
  inline ::std::string* release_payload();
  inline void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:SectBattle.ProtocolMessage)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_payload();
  inline void clear_has_payload();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* payload_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ProtocolMessage* default_instance_;
};
// -------------------------------------------------------------------

class PBPos : public ::google::protobuf::Message {
 public:
  PBPos();
  virtual ~PBPos();

  PBPos(const PBPos& from);

  inline PBPos& operator=(const PBPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPos& default_instance();

  void Swap(PBPos* other);

  // implements Message ----------------------------------------------

  PBPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPos& from);
  void MergeFrom(const PBPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // required uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SectBattle.PBPos)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PBPos* default_instance_;
};
// -------------------------------------------------------------------

class PBField : public ::google::protobuf::Message {
 public:
  PBField();
  virtual ~PBField();

  PBField(const PBField& from);

  inline PBField& operator=(const PBField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBField& default_instance();

  void Swap(PBField* other);

  // implements Message ----------------------------------------------

  PBField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBField& from);
  void MergeFrom(const PBField& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SectBattle.PBPos pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline const ::SectBattle::PBPos& pos() const;
  inline ::SectBattle::PBPos* mutable_pos();
  inline ::SectBattle::PBPos* release_pos();
  inline void set_allocated_pos(::SectBattle::PBPos* pos);

  // optional uint32 owner = 2;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 2;
  inline ::google::protobuf::uint32 owner() const;
  inline void set_owner(::google::protobuf::uint32 value);

  // optional uint32 garrison_num = 3;
  inline bool has_garrison_num() const;
  inline void clear_garrison_num();
  static const int kGarrisonNumFieldNumber = 3;
  inline ::google::protobuf::uint32 garrison_num() const;
  inline void set_garrison_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SectBattle.PBField)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_owner();
  inline void clear_has_owner();
  inline void set_has_garrison_num();
  inline void clear_has_garrison_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SectBattle::PBPos* pos_;
  ::google::protobuf::uint32 owner_;
  ::google::protobuf::uint32 garrison_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PBField* default_instance_;
};
// -------------------------------------------------------------------

class BattleField : public ::google::protobuf::Message {
 public:
  BattleField();
  virtual ~BattleField();

  BattleField(const BattleField& from);

  inline BattleField& operator=(const BattleField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleField& default_instance();

  void Swap(BattleField* other);

  // implements Message ----------------------------------------------

  BattleField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleField& from);
  void MergeFrom(const BattleField& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SectBattle.PBPos self_position = 1;
  inline bool has_self_position() const;
  inline void clear_self_position();
  static const int kSelfPositionFieldNumber = 1;
  inline const ::SectBattle::PBPos& self_position() const;
  inline ::SectBattle::PBPos* mutable_self_position();
  inline ::SectBattle::PBPos* release_self_position();
  inline void set_allocated_self_position(::SectBattle::PBPos* self_position);

  // repeated uint32 sect_members_count = 2;
  inline int sect_members_count_size() const;
  inline void clear_sect_members_count();
  static const int kSectMembersCountFieldNumber = 2;
  inline ::google::protobuf::uint32 sect_members_count(int index) const;
  inline void set_sect_members_count(int index, ::google::protobuf::uint32 value);
  inline void add_sect_members_count(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sect_members_count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sect_members_count();

  // repeated .SectBattle.PBField field = 3;
  inline int field_size() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 3;
  inline const ::SectBattle::PBField& field(int index) const;
  inline ::SectBattle::PBField* mutable_field(int index);
  inline ::SectBattle::PBField* add_field();
  inline const ::google::protobuf::RepeatedPtrField< ::SectBattle::PBField >&
      field() const;
  inline ::google::protobuf::RepeatedPtrField< ::SectBattle::PBField >*
      mutable_field();

  // @@protoc_insertion_point(class_scope:SectBattle.BattleField)
 private:
  inline void set_has_self_position();
  inline void clear_has_self_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SectBattle::PBPos* self_position_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sect_members_count_;
  ::google::protobuf::RepeatedPtrField< ::SectBattle::PBField > field_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BattleField* default_instance_;
};
// -------------------------------------------------------------------

class QueryBattleFieldRequest : public ::google::protobuf::Message {
 public:
  QueryBattleFieldRequest();
  virtual ~QueryBattleFieldRequest();

  QueryBattleFieldRequest(const QueryBattleFieldRequest& from);

  inline QueryBattleFieldRequest& operator=(const QueryBattleFieldRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryBattleFieldRequest& default_instance();

  void Swap(QueryBattleFieldRequest* other);

  // implements Message ----------------------------------------------

  QueryBattleFieldRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryBattleFieldRequest& from);
  void MergeFrom(const QueryBattleFieldRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SectBattle.QueryBattleFieldRequest)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static QueryBattleFieldRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryBattleFieldResponse : public ::google::protobuf::Message {
 public:
  QueryBattleFieldResponse();
  virtual ~QueryBattleFieldResponse();

  QueryBattleFieldResponse(const QueryBattleFieldResponse& from);

  inline QueryBattleFieldResponse& operator=(const QueryBattleFieldResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryBattleFieldResponse& default_instance();

  void Swap(QueryBattleFieldResponse* other);

  // implements Message ----------------------------------------------

  QueryBattleFieldResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryBattleFieldResponse& from);
  void MergeFrom(const QueryBattleFieldResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional sint32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional .SectBattle.BattleField battle_field = 3;
  inline bool has_battle_field() const;
  inline void clear_battle_field();
  static const int kBattleFieldFieldNumber = 3;
  inline const ::SectBattle::BattleField& battle_field() const;
  inline ::SectBattle::BattleField* mutable_battle_field();
  inline ::SectBattle::BattleField* release_battle_field();
  inline void set_allocated_battle_field(::SectBattle::BattleField* battle_field);

  // @@protoc_insertion_point(class_scope:SectBattle.QueryBattleFieldResponse)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_battle_field();
  inline void clear_has_battle_field();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 code_;
  ::SectBattle::BattleField* battle_field_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static QueryBattleFieldResponse* default_instance_;
};
// -------------------------------------------------------------------

class JoinBattleRequest : public ::google::protobuf::Message {
 public:
  JoinBattleRequest();
  virtual ~JoinBattleRequest();

  JoinBattleRequest(const JoinBattleRequest& from);

  inline JoinBattleRequest& operator=(const JoinBattleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinBattleRequest& default_instance();

  void Swap(JoinBattleRequest* other);

  // implements Message ----------------------------------------------

  JoinBattleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinBattleRequest& from);
  void MergeFrom(const JoinBattleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SectBattle.JoinBattleRequest)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static JoinBattleRequest* default_instance_;
};
// -------------------------------------------------------------------

class JoinBattleResponse : public ::google::protobuf::Message {
 public:
  JoinBattleResponse();
  virtual ~JoinBattleResponse();

  JoinBattleResponse(const JoinBattleResponse& from);

  inline JoinBattleResponse& operator=(const JoinBattleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinBattleResponse& default_instance();

  void Swap(JoinBattleResponse* other);

  // implements Message ----------------------------------------------

  JoinBattleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinBattleResponse& from);
  void MergeFrom(const JoinBattleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional sint32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional uint32 sect = 3;
  inline bool has_sect() const;
  inline void clear_sect();
  static const int kSectFieldNumber = 3;
  inline ::google::protobuf::uint32 sect() const;
  inline void set_sect(::google::protobuf::uint32 value);

  // optional .SectBattle.BattleField battle_field = 4;
  inline bool has_battle_field() const;
  inline void clear_battle_field();
  static const int kBattleFieldFieldNumber = 4;
  inline const ::SectBattle::BattleField& battle_field() const;
  inline ::SectBattle::BattleField* mutable_battle_field();
  inline ::SectBattle::BattleField* release_battle_field();
  inline void set_allocated_battle_field(::SectBattle::BattleField* battle_field);

  // @@protoc_insertion_point(class_scope:SectBattle.JoinBattleResponse)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_sect();
  inline void clear_has_sect();
  inline void set_has_battle_field();
  inline void clear_has_battle_field();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 code_;
  ::SectBattle::BattleField* battle_field_;
  ::google::protobuf::uint32 sect_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static JoinBattleResponse* default_instance_;
};
// -------------------------------------------------------------------

class MoveRequest : public ::google::protobuf::Message {
 public:
  MoveRequest();
  virtual ~MoveRequest();

  MoveRequest(const MoveRequest& from);

  inline MoveRequest& operator=(const MoveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveRequest& default_instance();

  void Swap(MoveRequest* other);

  // implements Message ----------------------------------------------

  MoveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveRequest& from);
  void MergeFrom(const MoveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline ::google::protobuf::uint32 direction() const;
  inline void set_direction(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SectBattle.MoveRequest)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_direction();
  inline void clear_has_direction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 direction_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MoveRequest* default_instance_;
};
// -------------------------------------------------------------------

class MoveResponse : public ::google::protobuf::Message {
 public:
  MoveResponse();
  virtual ~MoveResponse();

  MoveResponse(const MoveResponse& from);

  inline MoveResponse& operator=(const MoveResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveResponse& default_instance();

  void Swap(MoveResponse* other);

  // implements Message ----------------------------------------------

  MoveResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveResponse& from);
  void MergeFrom(const MoveResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional sint32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // repeated uint32 opponents = 3;
  inline int opponents_size() const;
  inline void clear_opponents();
  static const int kOpponentsFieldNumber = 3;
  inline ::google::protobuf::uint32 opponents(int index) const;
  inline void set_opponents(int index, ::google::protobuf::uint32 value);
  inline void add_opponents(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      opponents() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_opponents();

  // optional .SectBattle.BattleField battle_field = 4;
  inline bool has_battle_field() const;
  inline void clear_battle_field();
  static const int kBattleFieldFieldNumber = 4;
  inline const ::SectBattle::BattleField& battle_field() const;
  inline ::SectBattle::BattleField* mutable_battle_field();
  inline ::SectBattle::BattleField* release_battle_field();
  inline void set_allocated_battle_field(::SectBattle::BattleField* battle_field);

  // @@protoc_insertion_point(class_scope:SectBattle.MoveResponse)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_battle_field();
  inline void clear_has_battle_field();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > opponents_;
  ::SectBattle::BattleField* battle_field_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MoveResponse* default_instance_;
};
// -------------------------------------------------------------------

class ChangeSectRequest : public ::google::protobuf::Message {
 public:
  ChangeSectRequest();
  virtual ~ChangeSectRequest();

  ChangeSectRequest(const ChangeSectRequest& from);

  inline ChangeSectRequest& operator=(const ChangeSectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeSectRequest& default_instance();

  void Swap(ChangeSectRequest* other);

  // implements Message ----------------------------------------------

  ChangeSectRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeSectRequest& from);
  void MergeFrom(const ChangeSectRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 sect = 3;
  inline bool has_sect() const;
  inline void clear_sect();
  static const int kSectFieldNumber = 3;
  inline ::google::protobuf::uint32 sect() const;
  inline void set_sect(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SectBattle.ChangeSectRequest)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_sect();
  inline void clear_has_sect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 sect_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ChangeSectRequest* default_instance_;
};
// -------------------------------------------------------------------

class ChangeSectResponse : public ::google::protobuf::Message {
 public:
  ChangeSectResponse();
  virtual ~ChangeSectResponse();

  ChangeSectResponse(const ChangeSectResponse& from);

  inline ChangeSectResponse& operator=(const ChangeSectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeSectResponse& default_instance();

  void Swap(ChangeSectResponse* other);

  // implements Message ----------------------------------------------

  ChangeSectResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeSectResponse& from);
  void MergeFrom(const ChangeSectResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional sint32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional .SectBattle.BattleField battle_field = 3;
  inline bool has_battle_field() const;
  inline void clear_battle_field();
  static const int kBattleFieldFieldNumber = 3;
  inline const ::SectBattle::BattleField& battle_field() const;
  inline ::SectBattle::BattleField* mutable_battle_field();
  inline ::SectBattle::BattleField* release_battle_field();
  inline void set_allocated_battle_field(::SectBattle::BattleField* battle_field);

  // @@protoc_insertion_point(class_scope:SectBattle.ChangeSectResponse)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_battle_field();
  inline void clear_has_battle_field();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 code_;
  ::SectBattle::BattleField* battle_field_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ChangeSectResponse* default_instance_;
};
// -------------------------------------------------------------------

class CheckFightRequest : public ::google::protobuf::Message {
 public:
  CheckFightRequest();
  virtual ~CheckFightRequest();

  CheckFightRequest(const CheckFightRequest& from);

  inline CheckFightRequest& operator=(const CheckFightRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckFightRequest& default_instance();

  void Swap(CheckFightRequest* other);

  // implements Message ----------------------------------------------

  CheckFightRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckFightRequest& from);
  void MergeFrom(const CheckFightRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 opponent = 2;
  inline bool has_opponent() const;
  inline void clear_opponent();
  static const int kOpponentFieldNumber = 2;
  inline ::google::protobuf::uint32 opponent() const;
  inline void set_opponent(::google::protobuf::uint32 value);

  // optional uint32 direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline ::google::protobuf::uint32 direction() const;
  inline void set_direction(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SectBattle.CheckFightRequest)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_opponent();
  inline void clear_has_opponent();
  inline void set_has_direction();
  inline void clear_has_direction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 opponent_;
  ::google::protobuf::uint32 direction_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CheckFightRequest* default_instance_;
};
// -------------------------------------------------------------------

class CheckFightResponse : public ::google::protobuf::Message {
 public:
  CheckFightResponse();
  virtual ~CheckFightResponse();

  CheckFightResponse(const CheckFightResponse& from);

  inline CheckFightResponse& operator=(const CheckFightResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckFightResponse& default_instance();

  void Swap(CheckFightResponse* other);

  // implements Message ----------------------------------------------

  CheckFightResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckFightResponse& from);
  void MergeFrom(const CheckFightResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional sint32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional .SectBattle.BattleField battle_field = 3;
  inline bool has_battle_field() const;
  inline void clear_battle_field();
  static const int kBattleFieldFieldNumber = 3;
  inline const ::SectBattle::BattleField& battle_field() const;
  inline ::SectBattle::BattleField* mutable_battle_field();
  inline ::SectBattle::BattleField* release_battle_field();
  inline void set_allocated_battle_field(::SectBattle::BattleField* battle_field);

  // @@protoc_insertion_point(class_scope:SectBattle.CheckFightResponse)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_battle_field();
  inline void clear_has_battle_field();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 code_;
  ::SectBattle::BattleField* battle_field_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CheckFightResponse* default_instance_;
};
// -------------------------------------------------------------------

class ResetPositionRequest : public ::google::protobuf::Message {
 public:
  ResetPositionRequest();
  virtual ~ResetPositionRequest();

  ResetPositionRequest(const ResetPositionRequest& from);

  inline ResetPositionRequest& operator=(const ResetPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetPositionRequest& default_instance();

  void Swap(ResetPositionRequest* other);

  // implements Message ----------------------------------------------

  ResetPositionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResetPositionRequest& from);
  void MergeFrom(const ResetPositionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SectBattle.ResetPositionRequest)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sect_5fbattle_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sect_5fbattle_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ResetPositionRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtocolMessage

// optional bytes name = 1;
inline bool ProtocolMessage::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtocolMessage::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtocolMessage::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtocolMessage::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ProtocolMessage::name() const {
  return *name_;
}
inline void ProtocolMessage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtocolMessage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ProtocolMessage::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolMessage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ProtocolMessage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProtocolMessage::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes payload = 2;
inline bool ProtocolMessage::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtocolMessage::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtocolMessage::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtocolMessage::clear_payload() {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    payload_->clear();
  }
  clear_has_payload();
}
inline const ::std::string& ProtocolMessage::payload() const {
  return *payload_;
}
inline void ProtocolMessage::set_payload(const ::std::string& value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void ProtocolMessage::set_payload(const char* value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void ProtocolMessage::set_payload(const void* value, size_t size) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtocolMessage::mutable_payload() {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  return payload_;
}
inline ::std::string* ProtocolMessage::release_payload() {
  clear_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = payload_;
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProtocolMessage::set_allocated_payload(::std::string* payload) {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    delete payload_;
  }
  if (payload) {
    set_has_payload();
    payload_ = payload;
  } else {
    clear_has_payload();
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PBPos

// required uint32 x = 1;
inline bool PBPos::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPos::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPos::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPos::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 PBPos::x() const {
  return x_;
}
inline void PBPos::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
}

// required uint32 y = 2;
inline bool PBPos::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPos::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPos::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPos::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 PBPos::y() const {
  return y_;
}
inline void PBPos::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// PBField

// optional .SectBattle.PBPos pos = 1;
inline bool PBField::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBField::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBField::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBField::clear_pos() {
  if (pos_ != NULL) pos_->::SectBattle::PBPos::Clear();
  clear_has_pos();
}
inline const ::SectBattle::PBPos& PBField::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::SectBattle::PBPos* PBField::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::SectBattle::PBPos;
  return pos_;
}
inline ::SectBattle::PBPos* PBField::release_pos() {
  clear_has_pos();
  ::SectBattle::PBPos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PBField::set_allocated_pos(::SectBattle::PBPos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional uint32 owner = 2;
inline bool PBField::has_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBField::set_has_owner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBField::clear_has_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBField::clear_owner() {
  owner_ = 0u;
  clear_has_owner();
}
inline ::google::protobuf::uint32 PBField::owner() const {
  return owner_;
}
inline void PBField::set_owner(::google::protobuf::uint32 value) {
  set_has_owner();
  owner_ = value;
}

// optional uint32 garrison_num = 3;
inline bool PBField::has_garrison_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBField::set_has_garrison_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBField::clear_has_garrison_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBField::clear_garrison_num() {
  garrison_num_ = 0u;
  clear_has_garrison_num();
}
inline ::google::protobuf::uint32 PBField::garrison_num() const {
  return garrison_num_;
}
inline void PBField::set_garrison_num(::google::protobuf::uint32 value) {
  set_has_garrison_num();
  garrison_num_ = value;
}

// -------------------------------------------------------------------

// BattleField

// optional .SectBattle.PBPos self_position = 1;
inline bool BattleField::has_self_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleField::set_has_self_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleField::clear_has_self_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleField::clear_self_position() {
  if (self_position_ != NULL) self_position_->::SectBattle::PBPos::Clear();
  clear_has_self_position();
}
inline const ::SectBattle::PBPos& BattleField::self_position() const {
  return self_position_ != NULL ? *self_position_ : *default_instance_->self_position_;
}
inline ::SectBattle::PBPos* BattleField::mutable_self_position() {
  set_has_self_position();
  if (self_position_ == NULL) self_position_ = new ::SectBattle::PBPos;
  return self_position_;
}
inline ::SectBattle::PBPos* BattleField::release_self_position() {
  clear_has_self_position();
  ::SectBattle::PBPos* temp = self_position_;
  self_position_ = NULL;
  return temp;
}
inline void BattleField::set_allocated_self_position(::SectBattle::PBPos* self_position) {
  delete self_position_;
  self_position_ = self_position;
  if (self_position) {
    set_has_self_position();
  } else {
    clear_has_self_position();
  }
}

// repeated uint32 sect_members_count = 2;
inline int BattleField::sect_members_count_size() const {
  return sect_members_count_.size();
}
inline void BattleField::clear_sect_members_count() {
  sect_members_count_.Clear();
}
inline ::google::protobuf::uint32 BattleField::sect_members_count(int index) const {
  return sect_members_count_.Get(index);
}
inline void BattleField::set_sect_members_count(int index, ::google::protobuf::uint32 value) {
  sect_members_count_.Set(index, value);
}
inline void BattleField::add_sect_members_count(::google::protobuf::uint32 value) {
  sect_members_count_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BattleField::sect_members_count() const {
  return sect_members_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BattleField::mutable_sect_members_count() {
  return &sect_members_count_;
}

// repeated .SectBattle.PBField field = 3;
inline int BattleField::field_size() const {
  return field_.size();
}
inline void BattleField::clear_field() {
  field_.Clear();
}
inline const ::SectBattle::PBField& BattleField::field(int index) const {
  return field_.Get(index);
}
inline ::SectBattle::PBField* BattleField::mutable_field(int index) {
  return field_.Mutable(index);
}
inline ::SectBattle::PBField* BattleField::add_field() {
  return field_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SectBattle::PBField >&
BattleField::field() const {
  return field_;
}
inline ::google::protobuf::RepeatedPtrField< ::SectBattle::PBField >*
BattleField::mutable_field() {
  return &field_;
}

// -------------------------------------------------------------------

// QueryBattleFieldRequest

// optional uint32 uin = 1;
inline bool QueryBattleFieldRequest::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryBattleFieldRequest::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryBattleFieldRequest::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryBattleFieldRequest::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 QueryBattleFieldRequest::uin() const {
  return uin_;
}
inline void QueryBattleFieldRequest::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// -------------------------------------------------------------------

// QueryBattleFieldResponse

// optional uint32 uin = 1;
inline bool QueryBattleFieldResponse::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryBattleFieldResponse::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryBattleFieldResponse::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryBattleFieldResponse::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 QueryBattleFieldResponse::uin() const {
  return uin_;
}
inline void QueryBattleFieldResponse::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional sint32 code = 2;
inline bool QueryBattleFieldResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryBattleFieldResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryBattleFieldResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryBattleFieldResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 QueryBattleFieldResponse::code() const {
  return code_;
}
inline void QueryBattleFieldResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional .SectBattle.BattleField battle_field = 3;
inline bool QueryBattleFieldResponse::has_battle_field() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryBattleFieldResponse::set_has_battle_field() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryBattleFieldResponse::clear_has_battle_field() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryBattleFieldResponse::clear_battle_field() {
  if (battle_field_ != NULL) battle_field_->::SectBattle::BattleField::Clear();
  clear_has_battle_field();
}
inline const ::SectBattle::BattleField& QueryBattleFieldResponse::battle_field() const {
  return battle_field_ != NULL ? *battle_field_ : *default_instance_->battle_field_;
}
inline ::SectBattle::BattleField* QueryBattleFieldResponse::mutable_battle_field() {
  set_has_battle_field();
  if (battle_field_ == NULL) battle_field_ = new ::SectBattle::BattleField;
  return battle_field_;
}
inline ::SectBattle::BattleField* QueryBattleFieldResponse::release_battle_field() {
  clear_has_battle_field();
  ::SectBattle::BattleField* temp = battle_field_;
  battle_field_ = NULL;
  return temp;
}
inline void QueryBattleFieldResponse::set_allocated_battle_field(::SectBattle::BattleField* battle_field) {
  delete battle_field_;
  battle_field_ = battle_field;
  if (battle_field) {
    set_has_battle_field();
  } else {
    clear_has_battle_field();
  }
}

// -------------------------------------------------------------------

// JoinBattleRequest

// optional uint32 uin = 1;
inline bool JoinBattleRequest::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinBattleRequest::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinBattleRequest::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinBattleRequest::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 JoinBattleRequest::uin() const {
  return uin_;
}
inline void JoinBattleRequest::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 level = 2;
inline bool JoinBattleRequest::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinBattleRequest::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinBattleRequest::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinBattleRequest::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 JoinBattleRequest::level() const {
  return level_;
}
inline void JoinBattleRequest::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// JoinBattleResponse

// optional uint32 uin = 1;
inline bool JoinBattleResponse::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinBattleResponse::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinBattleResponse::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinBattleResponse::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 JoinBattleResponse::uin() const {
  return uin_;
}
inline void JoinBattleResponse::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional sint32 code = 2;
inline bool JoinBattleResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinBattleResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinBattleResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinBattleResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 JoinBattleResponse::code() const {
  return code_;
}
inline void JoinBattleResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional uint32 sect = 3;
inline bool JoinBattleResponse::has_sect() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinBattleResponse::set_has_sect() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinBattleResponse::clear_has_sect() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinBattleResponse::clear_sect() {
  sect_ = 0u;
  clear_has_sect();
}
inline ::google::protobuf::uint32 JoinBattleResponse::sect() const {
  return sect_;
}
inline void JoinBattleResponse::set_sect(::google::protobuf::uint32 value) {
  set_has_sect();
  sect_ = value;
}

// optional .SectBattle.BattleField battle_field = 4;
inline bool JoinBattleResponse::has_battle_field() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinBattleResponse::set_has_battle_field() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinBattleResponse::clear_has_battle_field() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinBattleResponse::clear_battle_field() {
  if (battle_field_ != NULL) battle_field_->::SectBattle::BattleField::Clear();
  clear_has_battle_field();
}
inline const ::SectBattle::BattleField& JoinBattleResponse::battle_field() const {
  return battle_field_ != NULL ? *battle_field_ : *default_instance_->battle_field_;
}
inline ::SectBattle::BattleField* JoinBattleResponse::mutable_battle_field() {
  set_has_battle_field();
  if (battle_field_ == NULL) battle_field_ = new ::SectBattle::BattleField;
  return battle_field_;
}
inline ::SectBattle::BattleField* JoinBattleResponse::release_battle_field() {
  clear_has_battle_field();
  ::SectBattle::BattleField* temp = battle_field_;
  battle_field_ = NULL;
  return temp;
}
inline void JoinBattleResponse::set_allocated_battle_field(::SectBattle::BattleField* battle_field) {
  delete battle_field_;
  battle_field_ = battle_field;
  if (battle_field) {
    set_has_battle_field();
  } else {
    clear_has_battle_field();
  }
}

// -------------------------------------------------------------------

// MoveRequest

// optional uint32 uin = 1;
inline bool MoveRequest::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveRequest::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveRequest::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveRequest::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 MoveRequest::uin() const {
  return uin_;
}
inline void MoveRequest::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 level = 2;
inline bool MoveRequest::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveRequest::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveRequest::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveRequest::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 MoveRequest::level() const {
  return level_;
}
inline void MoveRequest::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 direction = 3;
inline bool MoveRequest::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveRequest::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveRequest::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveRequest::clear_direction() {
  direction_ = 0u;
  clear_has_direction();
}
inline ::google::protobuf::uint32 MoveRequest::direction() const {
  return direction_;
}
inline void MoveRequest::set_direction(::google::protobuf::uint32 value) {
  set_has_direction();
  direction_ = value;
}

// -------------------------------------------------------------------

// MoveResponse

// optional uint32 uin = 1;
inline bool MoveResponse::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveResponse::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveResponse::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveResponse::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 MoveResponse::uin() const {
  return uin_;
}
inline void MoveResponse::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional sint32 code = 2;
inline bool MoveResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 MoveResponse::code() const {
  return code_;
}
inline void MoveResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// repeated uint32 opponents = 3;
inline int MoveResponse::opponents_size() const {
  return opponents_.size();
}
inline void MoveResponse::clear_opponents() {
  opponents_.Clear();
}
inline ::google::protobuf::uint32 MoveResponse::opponents(int index) const {
  return opponents_.Get(index);
}
inline void MoveResponse::set_opponents(int index, ::google::protobuf::uint32 value) {
  opponents_.Set(index, value);
}
inline void MoveResponse::add_opponents(::google::protobuf::uint32 value) {
  opponents_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MoveResponse::opponents() const {
  return opponents_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MoveResponse::mutable_opponents() {
  return &opponents_;
}

// optional .SectBattle.BattleField battle_field = 4;
inline bool MoveResponse::has_battle_field() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoveResponse::set_has_battle_field() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoveResponse::clear_has_battle_field() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoveResponse::clear_battle_field() {
  if (battle_field_ != NULL) battle_field_->::SectBattle::BattleField::Clear();
  clear_has_battle_field();
}
inline const ::SectBattle::BattleField& MoveResponse::battle_field() const {
  return battle_field_ != NULL ? *battle_field_ : *default_instance_->battle_field_;
}
inline ::SectBattle::BattleField* MoveResponse::mutable_battle_field() {
  set_has_battle_field();
  if (battle_field_ == NULL) battle_field_ = new ::SectBattle::BattleField;
  return battle_field_;
}
inline ::SectBattle::BattleField* MoveResponse::release_battle_field() {
  clear_has_battle_field();
  ::SectBattle::BattleField* temp = battle_field_;
  battle_field_ = NULL;
  return temp;
}
inline void MoveResponse::set_allocated_battle_field(::SectBattle::BattleField* battle_field) {
  delete battle_field_;
  battle_field_ = battle_field;
  if (battle_field) {
    set_has_battle_field();
  } else {
    clear_has_battle_field();
  }
}

// -------------------------------------------------------------------

// ChangeSectRequest

// optional uint32 uin = 1;
inline bool ChangeSectRequest::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeSectRequest::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeSectRequest::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeSectRequest::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 ChangeSectRequest::uin() const {
  return uin_;
}
inline void ChangeSectRequest::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 level = 2;
inline bool ChangeSectRequest::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeSectRequest::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeSectRequest::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeSectRequest::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ChangeSectRequest::level() const {
  return level_;
}
inline void ChangeSectRequest::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 sect = 3;
inline bool ChangeSectRequest::has_sect() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeSectRequest::set_has_sect() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeSectRequest::clear_has_sect() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeSectRequest::clear_sect() {
  sect_ = 0u;
  clear_has_sect();
}
inline ::google::protobuf::uint32 ChangeSectRequest::sect() const {
  return sect_;
}
inline void ChangeSectRequest::set_sect(::google::protobuf::uint32 value) {
  set_has_sect();
  sect_ = value;
}

// -------------------------------------------------------------------

// ChangeSectResponse

// optional uint32 uin = 1;
inline bool ChangeSectResponse::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeSectResponse::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeSectResponse::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeSectResponse::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 ChangeSectResponse::uin() const {
  return uin_;
}
inline void ChangeSectResponse::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional sint32 code = 2;
inline bool ChangeSectResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeSectResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeSectResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeSectResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ChangeSectResponse::code() const {
  return code_;
}
inline void ChangeSectResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional .SectBattle.BattleField battle_field = 3;
inline bool ChangeSectResponse::has_battle_field() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeSectResponse::set_has_battle_field() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeSectResponse::clear_has_battle_field() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeSectResponse::clear_battle_field() {
  if (battle_field_ != NULL) battle_field_->::SectBattle::BattleField::Clear();
  clear_has_battle_field();
}
inline const ::SectBattle::BattleField& ChangeSectResponse::battle_field() const {
  return battle_field_ != NULL ? *battle_field_ : *default_instance_->battle_field_;
}
inline ::SectBattle::BattleField* ChangeSectResponse::mutable_battle_field() {
  set_has_battle_field();
  if (battle_field_ == NULL) battle_field_ = new ::SectBattle::BattleField;
  return battle_field_;
}
inline ::SectBattle::BattleField* ChangeSectResponse::release_battle_field() {
  clear_has_battle_field();
  ::SectBattle::BattleField* temp = battle_field_;
  battle_field_ = NULL;
  return temp;
}
inline void ChangeSectResponse::set_allocated_battle_field(::SectBattle::BattleField* battle_field) {
  delete battle_field_;
  battle_field_ = battle_field;
  if (battle_field) {
    set_has_battle_field();
  } else {
    clear_has_battle_field();
  }
}

// -------------------------------------------------------------------

// CheckFightRequest

// optional uint32 uin = 1;
inline bool CheckFightRequest::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckFightRequest::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckFightRequest::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckFightRequest::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 CheckFightRequest::uin() const {
  return uin_;
}
inline void CheckFightRequest::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 opponent = 2;
inline bool CheckFightRequest::has_opponent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckFightRequest::set_has_opponent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckFightRequest::clear_has_opponent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckFightRequest::clear_opponent() {
  opponent_ = 0u;
  clear_has_opponent();
}
inline ::google::protobuf::uint32 CheckFightRequest::opponent() const {
  return opponent_;
}
inline void CheckFightRequest::set_opponent(::google::protobuf::uint32 value) {
  set_has_opponent();
  opponent_ = value;
}

// optional uint32 direction = 3;
inline bool CheckFightRequest::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckFightRequest::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckFightRequest::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckFightRequest::clear_direction() {
  direction_ = 0u;
  clear_has_direction();
}
inline ::google::protobuf::uint32 CheckFightRequest::direction() const {
  return direction_;
}
inline void CheckFightRequest::set_direction(::google::protobuf::uint32 value) {
  set_has_direction();
  direction_ = value;
}

// -------------------------------------------------------------------

// CheckFightResponse

// optional uint32 uin = 1;
inline bool CheckFightResponse::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckFightResponse::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckFightResponse::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckFightResponse::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 CheckFightResponse::uin() const {
  return uin_;
}
inline void CheckFightResponse::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional sint32 code = 2;
inline bool CheckFightResponse::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckFightResponse::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckFightResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckFightResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 CheckFightResponse::code() const {
  return code_;
}
inline void CheckFightResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional .SectBattle.BattleField battle_field = 3;
inline bool CheckFightResponse::has_battle_field() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckFightResponse::set_has_battle_field() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckFightResponse::clear_has_battle_field() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckFightResponse::clear_battle_field() {
  if (battle_field_ != NULL) battle_field_->::SectBattle::BattleField::Clear();
  clear_has_battle_field();
}
inline const ::SectBattle::BattleField& CheckFightResponse::battle_field() const {
  return battle_field_ != NULL ? *battle_field_ : *default_instance_->battle_field_;
}
inline ::SectBattle::BattleField* CheckFightResponse::mutable_battle_field() {
  set_has_battle_field();
  if (battle_field_ == NULL) battle_field_ = new ::SectBattle::BattleField;
  return battle_field_;
}
inline ::SectBattle::BattleField* CheckFightResponse::release_battle_field() {
  clear_has_battle_field();
  ::SectBattle::BattleField* temp = battle_field_;
  battle_field_ = NULL;
  return temp;
}
inline void CheckFightResponse::set_allocated_battle_field(::SectBattle::BattleField* battle_field) {
  delete battle_field_;
  battle_field_ = battle_field;
  if (battle_field) {
    set_has_battle_field();
  } else {
    clear_has_battle_field();
  }
}

// -------------------------------------------------------------------

// ResetPositionRequest

// optional uint32 uin = 1;
inline bool ResetPositionRequest::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResetPositionRequest::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResetPositionRequest::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResetPositionRequest::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 ResetPositionRequest::uin() const {
  return uin_;
}
inline void ResetPositionRequest::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SectBattle

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sect_5fbattle_5fprotocol_2eproto__INCLUDED
